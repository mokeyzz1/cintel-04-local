[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui, render\nfrom shinywidgets import render_plotly\nfrom palmerpenguins import load_penguins\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom shiny import reactive\n\n# Load the penguins dataset\npenguins_df = load_penguins()\n\n# Set up page options\nui.page_opts(title=\"Moses Penguins Data\", fillable=True)\n\n# Sidebar for user input controls\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Sidebar\")\n    ui.input_selectize(\n        \"selected_attribute\",\n        \"Select attributes\",\n        [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n        selected=[\"bill_length_mm\"],\n        multiple=True\n    )\n    ui.input_numeric(\"plotly_bin_count\", \"Input number\", 0)\n    ui.input_slider(\"seaborn_bin_count\", \"Bin Count\", min=0, max=20, value=10)\n    ui.input_checkbox_group(\n        \"selected_species_list\",\n        \"Species:\", \n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        inline=True\n    )\n    ui.hr()\n    ui.a(\"GitHub\", href=\"https://github.com/mokeyzz1/cintel-02-data\", target=\"_blank\")\n\n# Reactive function to filter penguins_df based on selected species\n@reactive.calc\ndef filtered_data():\n    selected_species = input.selected_species_list()\n    return penguins_df[penguins_df[\"species\"].isin(selected_species)]\n\n# Layout for data table and grid\nwith ui.layout_columns():\n    with ui.card():\n        ui.card_header(\"Penguins Data Table\")\n        \n        @render.data_frame\n        def penguinstable_df():\n            return render.DataTable(filtered_data(), filters=False, selection_mode='row')\n\n    with ui.card():\n        ui.card_header(\"Penguins Data Grid\")\n        \n        @render.data_frame\n        def penguinsgrid_df():\n            return render.DataGrid(filtered_data(), filters=False, selection_mode=\"row\")\n\n# Layout for Plotly and Seaborn visualizations\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.card_header(\"Plotly Histogram: Species\")\n        \n        @render_plotly\n        def plot1():\n            fig = px.histogram(\n                filtered_data(),\n                x=\"body_mass_g\",\n                color=\"species\",\n                title=\"Penguin Body Mass by Species\",\n                labels={\"body_mass_g\": \"Body Mass (g)\", \"count\": \"Count\"},\n                marginal=\"box\"\n            )\n            return fig\n\n    with ui.card(full_screen=True):\n        ui.card_header(\"Seaborn Histogram: Species\")\n        \n        @render.plot\n        def seaborn_histogram():\n            fig, ax = plt.subplots(figsize=(10, 6))\n            sns.histplot(data=filtered_data(), x=\"body_mass_g\", hue=\"species\", multiple=\"stack\", ax=ax)\n            ax.set_title(\"Penguin Body Mass by Species\")\n            ax.set_xlabel(\"Body Mass (g)\")\n            ax.set_ylabel(\"Count\")\n            return fig\n\nwith ui.card(full_screen=True):\n    ui.card_header(\"Plotly Scatterplot: Penguin Flipper & Bill Length\")\n    \n    @render_plotly\n    def plotly_scatterplot():\n        fig = px.scatter(\n            filtered_data(),\n            x=\"flipper_length_mm\",\n            y=\"bill_length_mm\",\n            color=\"species\",\n            title=\"Penguins Scatterplot: Body Mass vs. Flipper Length\",\n            labels={\n                \"flipper_length_mm\": \"Flipper Length (mm)\",\n                \"bill_length_mm\": \"Bill Length (mm)\"\n            }\n        )\n        return fig\n", "type": "text"}]